.search-area {

    /* The colour I have chosen is a Pastel colour, which is a colour that dyslexic people have a better time associating with */
    background-color: blanchedalmond;

    width: 40vw;
    height: 100vh;
}

/* If the window is less or equal to 750px, then it will make the search area 100% of the device's width */
@media only screen and (max-width: 750px) {
    .search-area {
        width: 100vw;
        height: 70vh;
    }
}

.search-area button {

    padding: 10px 10px 10px 10px;

    background-color: white;

    width: 15vw;
    height: 10vh;

    border: none;
    /* Giving a round border to a buttom gives a modern feel */
    border-radius: 10px;

    font-size: 1.6vw;
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;

    /* I have added a transition animation so that when the user hovers over the button, there is a response in the program to make it seem responsive */
    transition: box-shadow 0.2s ease-in-out;
}

.search-area button:hover {
    box-shadow: 0px 0px 80px 1px rgb(255, 221, 154);
}

.address-container, .distance-container {
    width: 100%;

    margin-bottom: 8vh;
}

.address-container h1, .distance-container h1 {
    font-size: 2.5vw;
    font-family:'Courier New', Courier, monospace;

    text-align: center;

    margin-bottom: 2.5vh
}

.address-container input, .distance-container input {
    padding-left: 5px;
    padding-right: 5px;

    border: none;
    border-radius: 10px;

    box-shadow: none;

    height: 5vh;
    width: 50%;

    font-size: 3vh;
    font-family:'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;

    transition: box-shadow 0.2s ease-in-out;
}

.address-container input:focus, .distance-container input:focus {
    border: none;
    outline: none;

    box-shadow: 0px 0px 80px 1px rgb(255, 221, 154);
}

.address-container input:focus, .distance-container input:focus {
    border: none;
    outline: none;

    box-shadow: 0px 0px 80px 1px rgb(255, 221, 154);
}

.address-container input::placeholder {
    font-size: 75%;
}

.address-container input::placeholder, .distance-container input::placeholder {
    font-style: italic;
    color: rgb(143, 143, 143);
}



.loading-container {
    
    /* The z-index lets UI to be order based on its z-index */
    /* Here I have set the z-index to 100 so the loading container appears in front of the map */
    z-index: 100;

    display: flex;
    justify-content: end;

    width: 100vw;

    position: absolute;
}

.loading-screen {
    width: 60vw;
    height: 100vh;

    display: flex;
    justify-content: center;
    align-items: center;

    /* Makes the background colour of the loading screen to be slightly transparent so the user can see what is going on */
    background-color: rgba(28, 28, 28, 0.9);

    z-index: 100;
}

/* Manually  animates the loading wheel so it spins*/
.loading-wheel {
    animation: rotating 2s linear infinite;
}
@keyframes rotating {
    to {
      transform: rotate(360deg);
    }
}

@media only screen and (max-width: 750px) {
    .loading-container {
        width: 110vw;
        height: 100vh;

        overflow-y: hidden;

        position: fixed;
    }

    .loading-screen {
        width: 110vw;
        height: 100vh;

        overflow-y: hidden;
    }
}